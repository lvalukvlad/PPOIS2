import time
from cli_input import CliInput
from cli_print import CliPrint
from guest import Guest
from reception import Reception
from staff import Staff
from transitions import Machine


class Menu:
    __cli_print: CliPrint = CliPrint()
    __cli_input: CliInput = CliInput()
    state: str
    __guest = Guest()
    __receptionist = Staff()
    __reception = Reception()
    __menu_items = {
        'booking': [
            '1 - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ—Å—Ç—è',
            '2 - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
            '3 - –í—ã–±—Ä–∞—Ç—å –Ω–æ–º–µ—Ä',
            '4 - –í—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥–∏',
            '5 - –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞—Å–µ–ª–µ–Ω–∏—é',
            '0 - –í—ã—Ö–æ–¥'
        ],
        'check_in': [
            '1 - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω—å',
            '2 - –£–ª—É—á—à–∏—Ç—å –Ω–æ–º–µ—Ä',
            '3 - –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥–∏',
            '4 - –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
            '5 - –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–µ—Ä–≤–∏—Å–∞–º',
            '0 - –í—ã—Ö–æ–¥'
        ],
        'services': [
            '1 - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è',
            '2 - –ó–∞–∫–∞–∑–∞—Ç—å —É–±–æ—Ä–∫—É',
            '3 - –ó–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ',
            '4 - –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã—Å–µ–ª–µ–Ω–∏—é',
            '0 - –í—ã—Ö–æ–¥'
        ],
        'check_out': [
            '–û–ø–ª–∞—Ç–∞ –∏ –æ—Ç–∑—ã–≤:'
        ]
    }
    states = ['booking', 'check_in', 'services', 'check_out']

    def __init__(self):
        self.machine = Machine(model=self, states=Menu.states, initial="booking")
        self.machine.add_transition("go_to_check_in", "booking", "check_in")
        self.machine.add_transition("go_to_services", "check_in", "services")
        self.machine.add_transition("go_to_check_out", "services", "check_out")

    def booking_menu(self):
        while True:
            for element in self.__menu_items[self.state]:
                self.__cli_print.print(element)
            choice: int
            self.__cli_input.set_input('–í–≤–æ–¥: ')
            input_str: str = self.__cli_input.get_input()
            try:
                choice: int = int(input_str)
            except ValueError:
                self.__cli_print.print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
                continue

            if choice == 1:
                self.__guest.add_guest()
                self.__menu_items['booking'].remove('1 - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ—Å—Ç—è')
            elif choice == 2:
                self.__receptionist.add_staff()
                self.__menu_items['booking'].remove('2 - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
            elif choice == 3:
                self.__guest.select_room()
            elif choice == 4:
                self.__guest.select_services()
            elif choice == 5:
                if (self.__guest.get_booking_data()['room_quality'] != 0
                        and self.__guest.get_booking_data()['service_level'] != 0
                        and self.__receptionist.is_exist()
                        and self.__guest.is_exist()):
                    self.go_to_check_in()
                    self.menu()
                    break
                else:
                    self.__cli_print.print('–ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!')
            elif choice == 0:
                return
            else:
                continue

    def check_in_menu(self):
        verification: bool = False
        while True:
            for element in self.__menu_items[self.state]:
                self.__cli_print.print(element)
            choice: int
            self.__cli_input.set_input('–í–≤–æ–¥: ')
            input_str: str = self.__cli_input.get_input()
            try:
                choice: int = int(input_str)
            except ValueError:
                self.__cli_print.print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
                continue

            if choice == 1:
                verification = self.__receptionist.confirm_booking(
                    self.__guest.get_booking_data()
                )
            elif choice == 2:
                self.__guest.upgrade_room()
            elif choice == 3:
                self.__guest.upgrade_services()
            elif choice == 4:
                self.__reception.add_staff()
            elif choice == 5:
                if verification and self.__reception.is_ready():
                    self.go_to_services()
                    self.menu()
                    break
                elif not verification:
                    self.__cli_print.print('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!')
                else:
                    self.__cli_print.print('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞!')
            elif choice == 0:
                return
            else:
                continue

    def services_menu(self):
        verification: bool = False
        while True:
            for element in self.__menu_items[self.state]:
                self.__cli_print.print(element)
            choice: int
            self.__cli_input.set_input('–í–≤–æ–¥: ')
            input_str: str = self.__cli_input.get_input()
            try:
                choice: int = int(input_str)
            except ValueError:
                self.__cli_print.print("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
                continue

            if choice == 1:
                verification = self.__reception.check_service_quality(
                    self.__guest.get_booking_data()
                )
            elif choice == 2:
                self.__guest.order_cleaning()
            elif choice == 3:
                self.__guest.order_food()
            elif choice == 4:
                self.go_to_check_out()
                self.menu()
                break
            elif choice == 0:
                return
            else:
                continue

    def check_out_menu(self):
        base_price = 100
        services_cost = self.__guest.get_services_cost()
        total = base_price + services_cost

        self.__cli_print.print('\n=== –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ ===')
        self.__cli_print.print(f'{"–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞":<20} ${base_price}')
        if services_cost > 0:
            self.__cli_print.print(f'{"–î–æ–ø. —É—Å–ª—É–≥–∏":<20} +${services_cost}')

        self.__cli_input.set_input('\n–ù–∞–∑–æ–≤–∏—Ç–µ –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Å–∫–∏–¥–∫–∞ $5): ')
        if self.__cli_input.get_input().strip().lower() == self.__receptionist.get_first_name().lower():
            total -= 5
            self.__cli_print.print(f'{"–°–∫–∏–¥–∫–∞ –∑–∞ –∏–º—è":<20} -$5')

        while True:
            self.__cli_input.set_input('\n–û—Ü–µ–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5‚òÖ). 5‚òÖ = —Å–∫–∏–¥–∫–∞ $10: ')
            rating = self.__cli_input.get_input().strip()
            if rating.isdigit() and 1 <= int(rating) <= 5:
                discount = int(rating) * 2
                total -= discount
                self.__cli_print.print(f'{"–°–∫–∏–¥–∫–∞ –∑–∞ " + rating + "‚òÖ":<20} -${discount}')
                break
            self.__cli_print.print('–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5')

        while True:
            self.__cli_input.set_input('\n–û—Ü–µ–Ω–∏—Ç–µ —á–∏—Å—Ç–æ—Ç—É (1-5). 5‚òÖ = —Å–∫–∏–¥–∫–∞ $10: ')
            rating = self.__cli_input.get_input().strip()
            if rating.isdigit() and 1 <= int(rating) <= 5:
                discount = int(rating) * 2
                total -= discount
                self.__cli_print.print(f'{"–°–∫–∏–¥–∫–∞ –∑–∞ —á–∏—Å—Ç–æ—Ç—É":<20} -${discount}')
                break
            self.__cli_print.print('–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5')

        while True:
            self.__cli_input.set_input('\n–û—Ü–µ–Ω–∏—Ç–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ (1-5). 5‚òÖ = —Å–∫–∏–¥–∫–∞ $15: ')
            rating = self.__cli_input.get_input().strip()
            if rating.isdigit() and 1 <= int(rating) <= 5:
                discount = int(rating) * 3
                total -= discount
                self.__cli_print.print(f'{"–°–∫–∏–¥–∫–∞ –∑–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ":<20} -${discount}')
                break
            self.__cli_print.print('–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5')

        while True:
            self.__cli_input.set_input('\n–ü–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç–µ –æ—Ç–µ–ª—å? (1-–¥–∞/+$10, 0-–Ω–µ—Ç/+$0): ')
            answer = self.__cli_input.get_input().strip()
            if answer in ('0', '1'):
                if answer == '1':
                    total -= 10
                    self.__cli_print.print(f'{"–°–∫–∏–¥–∫–∞ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é":<20} -$10')
                break
            self.__cli_print.print('–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ 0 –∏–ª–∏ 1')

        total = max(total, 60)

        self.__cli_print.print('\n' + '=' * 40)
        self.__cli_print.print(f'{"–ò–¢–û–ì–û":<20} ${total}')
        self.__cli_print.print('=' * 40 + '\n')
        self.__cli_print.print('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ! –ñ–¥–µ–º –≤–∞—Å —Å–Ω–æ–≤–∞! üè®')
        exit()

    def menu(self):
        menu_functions = {
            'booking': self.booking_menu,
            'check_in': self.check_in_menu,
            'services': self.services_menu,
            'check_out': self.check_out_menu
        }
        current_menu = menu_functions[self.state]
        current_menu()
